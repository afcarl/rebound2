#Testing how energy and time scales with N_particles.

import multiprocessing as mp
import os
import sys
#import numpy as np

#params=[(3000000,100,1e-5,94),(3000000,100,1e-7,94),(3000000,100,1e-9,94),(1000000,1000,1e-5,12),(1000000,1000,1e-6,12),(1000000,1000,1e-7,12),(1000000,1000,1e-9,12),(100000,10000,1e-7,44),(100000,10000,1e-9,44)]
#params=[(500000,100,7,1.0,12),(500000,100,7,0.5,12),(500000,100,7,0.25,12),(500000,100,7,0.125,12),(500000,100,5,1.0,12),(500000,100,5,0.5,12),(500000,100,5,0.25,12),(500000,100,5,0.125,12),(500000,100,3,1.0,12),(500000,100,3,0.5,12),(500000,100,3,0.25,12),(500000,100,3,0.125,12),(500000,100,2,0.5,12),(500000,100,2,0.25,12),(500000,100,2,0.125,12)]
#params=[(50000,1000,14),(50000,1000,15),(50000,1000,25),(50000,1000,26),(50000,1000,33),(50000,1000,34),(50000,1000,45),(50000,1000,67),(100000,500,57),(100000,500,45),(100000,500,5),(100000,500,67),(100000,500,48),(100000,500,23),(100000,500,81),(100000,500,96),(1000000,50,14),(1000000,50,44),(1000000,50,24),(1000000,50,64),(1000000,50,17),(1000000,50,22),(1000000,50,67),(1000000,50,97)]
params=[(100000,50,14),(100000,50,44),(100000,50,24),(100000,50,64)]
length = len(params)

os.system('make')

def execute(pars):
    os.system('./rebound '+str(pars[0])+' '+str(pars[1])+' '+str(pars[2]))

#Main multiprocess execution - Give sysname and letters of outer planets close to resonance
if __name__== '__main__':
    pool = mp.Pool(processes=length)
    args=[params[i] for i in xrange(0,length)]
    pool.map(execute, args)
    pool.close()
    pool.join()